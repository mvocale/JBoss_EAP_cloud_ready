<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.redhat.examples</groupId>
        <artifactId>weather-app-cloud-ready-parent</artifactId>
        <version>1.0.0</version>
    </parent>
    <artifactId>weather-app-cloud-ready</artifactId>
    <packaging>war</packaging>
    <version>1.0</version>

    <properties>
        <failOnMissingWebXml>false</failOnMissingWebXml>
        <version.server.bom>7.4.5.GA</version.server.bom>
        <version.microprofile.bom>4.0.0.GA-7.4.5.GA</version.microprofile.bom>
        <bootable.jar.maven.plugin.version>6.1.3.Final-redhat-00001</bootable.jar.maven.plugin.version>
        <version.wildfly.galleon.pack>4.0.0.GA-redhat-00005</version.wildfly.galleon.pack>
        <version.eap.datasources.galleon.pack>7.4.0.GA-redhat-00003</version.eap.datasources.galleon.pack>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- importing the jakartaee8-with-tools BOM adds specs and other useful artifacts as managed dependencies -->
            <dependency>
                <groupId>org.jboss.bom</groupId>
                <artifactId>jboss-eap-jakartaee8</artifactId>
                <version>${version.server.bom}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- importing the microprofile BOM adds MicroProfile specs -->
            <dependency>
                <groupId>org.jboss.bom</groupId>
                <artifactId>jboss-eap-xp-microprofile</artifactId>
                <version>${version.microprofile.bom}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- Import the Persistence API, we use provided scope as the API is included in JBoss EAP -->
        <dependency>
            <groupId>jakarta.persistence</groupId>
            <artifactId>jakarta.persistence-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- Import the CDI API, we use provided scope as the API is included in JBoss EAP -->
        <dependency>
            <groupId>jakarta.enterprise</groupId>
            <artifactId>jakarta.enterprise.cdi-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.spec.javax.annotation</groupId>
            <artifactId>jboss-annotations-api_1.3_spec</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- Import the Jakarta REST API, we use provided scope as the API is included in the server -->
        <dependency>
            <groupId>org.jboss.spec.javax.ws.rs</groupId>
            <artifactId>jboss-jaxrs-api_2.1_spec</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- Import the MicroProfile Health API, we use provided scope as the API is included in JBoss EAP XP -->
        <dependency>
            <groupId>org.eclipse.microprofile.health</groupId>
            <artifactId>microprofile-health-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- Import the MicroProfile Metrics API, we use provided scope as the API is included in JBoss EAP XP -->
        <dependency>
            <groupId>org.eclipse.microprofile.metrics</groupId>
            <artifactId>microprofile-metrics-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- Import the MicroProfile OpenTracing API, we use provided scope as the API is included in the server -->
        <dependency>
            <groupId>org.eclipse.microprofile.opentracing</groupId>
            <artifactId>microprofile-opentracing-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- Import the MicroProfile OpenAPI, we use provided scope as the API is included in the server -->
        <dependency>
            <groupId>org.eclipse.microprofile.openapi</groupId>
            <artifactId>microprofile-openapi-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.microprofile-ext.openapi-ext</groupId>
            <artifactId>openapi-ui</artifactId>
            <version>1.1.5</version>
            <scope>runtime</scope>
        </dependency>
        <!-- Import the MicroProfile Config API, we use provided scope as the API is included in the server -->
        <dependency>
            <groupId>org.eclipse.microprofile.config</groupId>
            <artifactId>microprofile-config-api</artifactId>
            <scope>provided</scope>
        </dependency>
    </dependencies>
    <build>
        <finalName>${project.artifactId}</finalName>
    </build>

    <profiles>
        <profile>
            <id>bootable-jar-openshift</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.wildfly.plugins</groupId>
                        <artifactId>wildfly-jar-maven-plugin</artifactId>
                        <version>${bootable.jar.maven.plugin.version}</version>
                        <configuration>
                            <feature-packs>
                                <feature-pack>
                                    <location>org.jboss.eap:wildfly-galleon-pack:${version.wildfly.galleon.pack}</location>
                                </feature-pack>
                                <feature-pack>
                                    <location>org.jboss.eap:eap-datasources-galleon-pack:${version.eap.datasources.galleon.pack}</location>
                                </feature-pack>
                            </feature-packs>
                            <cloud/>
                            <layers>
                                <layer>jaxrs-server</layer>
                                <layer>microprofile-platform</layer>
                                <layer>postgresql-datasource</layer>
                            </layers>
                            <excluded-layers>
                                <layer>deployment-scanner</layer>
                            </excluded-layers>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>package</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>